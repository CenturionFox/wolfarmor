buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'
//Only edit below this line, the above code adds and enables the nessasary things for Forge to be setup.

def versioningFile = file('versioning.properties')
def mcversion = '0.0'
def majormod = '0'
def majorapi = '0'
def minor = '0'
def patch = 0
def extended = ''

if(versioningFile.canRead()) {
	Properties versionProperties = new Properties()
	versionProperties.load(new FileInputStream(versioningFile))
	mcversion = versionProperties['MCVERSION'].toString()
    majormod = versionProperties['MAJORMOD'].toString()
    majorapi = versionProperties['MAJORAPI'].toString()
    minor = versionProperties['MINOR'].toString()
    patch = versionProperties['PATCH'].toInteger()
    extended = versionProperties['EXTENDED'].toString()
}
sourceSets.api {
    java {
        srcDirs 'api/'
    }
}
sourceSets.main {
    java {
        srcDirs 'api/'
        srcDirs 'src/main/java'
    }
}

build {
	ext.autoIncrementBuildNumber = {
		if (versioningFile.canRead()) {
			Properties versionProps = new Properties()
			versionProps.load(new FileInputStream(versioningFile))
			patch = versionProps['PATCH'].toInteger() + 1
			versionProps['PATCH'] = patch.toString()
			versionProps.store(versioningFile.newWriter(), null)
		} else {
			throw new GradleException("Could not read versioning.properties!")
		}
	}
	
	gradle.taskGraph.whenReady {taskGraph ->
		if(taskGraph.hasTask(compileJava) &&
           taskGraph.hasTask(assemble) &&
           taskGraph.hasTask(build)) {
			autoIncrementBuildNumber()
		}
	}

    return 0
}

version = mcversion + "-" + majormod + "." + majorapi + "." + minor + "." + patch + extended
logger.quiet("Current version is " + version)
group= "com.attributestudios.wolfarmor" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
//noinspection GroovyUnusedAssignment
archivesBaseName = "wolfarmor"

//noinspection GroovyUnusedAssignment
sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = "1.7.10-10.13.4.1558-1.7.10"
    runDir = "run"
    mappings = "stable_12"
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
	
	// copy LICENSE
    from('/') {
        include 'LICENSE'
        include 'CREDITS'
    }
}
